<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="15" time="2.872" timestamp="2025-07-26T12:39:02.440928" hostname="GoodgooddeMacBook-Air.local"><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_analyzer_initialization" time="0.001" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_differential_expression_analysis" time="0.090" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_survival_association_analysis" time="0.012"><failure message="assert 0 &gt; 0&#10; +  where 0 = len({})">tests/test_closedloop_analyzer.py:150: in test_survival_association_analysis
    assert len(evidence) &gt; 0
E   assert 0 &gt; 0
E    +  where 0 = len({})</failure></testcase><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_cnv_driver_analysis" time="0.048" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_methylation_regulation_analysis" time="0.047" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_mutation_frequency_analysis" time="0.004"><failure message="assert 0 &gt; 0&#10; +  where 0 = len({})">tests/test_closedloop_analyzer.py:199: in test_mutation_frequency_analysis
    assert len(evidence) &gt; 0
E   assert 0 &gt; 0
E    +  where 0 = len({})</failure></testcase><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_causal_score_calculation" time="0.001" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_full_causal_analysis" time="0.196" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_evidence_network_construction" time="0.001" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_pathway_analysis" time="0.001" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_validation_metrics" time="0.002" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_candidate_gene_selection" time="0.003" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_error_handling" time="0.006"><failure message="AssertionError: assert not True&#10; +  where True = ClosedLoopResult(causal_genes=[], evidence_network=&lt;networkx.classes.graph.Graph object at 0x14d340d40&gt;, pathway_analysis={'enriched_pathways': {'cancer_pathways': {'p53_pathway': 0, 'pi3k_pathway': 0, 'rb_pathway': 0}, 'metabolic_pathways': {'glycolysis': 0, 'oxidative_phosphorylation': 0}, 'immune_pathways': {'interferon_response': 0, 'nf_kb_pathway': 0}}, 'total_genes_analyzed': 0, 'pathway_coverage': 0.0}, validation_metrics={'cross_validation_score': 0.0, 'bootstrap_stability': 0.0, 'literature_support': 0.0}, algorithm_stats={'total_genes_analyzed': 0, 'causal_genes_identified': 0, 'causal_gene_ratio': 0.0, 'mean_causal_score': 0.0, 'evidence_type_coverage': {}, 'confidence_distribution': {'High': 0, 'Medium': 0, 'Low': 0}}, success=True, errors=[]).success">tests/test_closedloop_analyzer.py:375: in test_error_handling
    assert not result.success
E   AssertionError: assert not True
E    +  where True = ClosedLoopResult(causal_genes=[], evidence_network=&lt;networkx.classes.graph.Graph object at 0x14d340d40&gt;, pathway_analysis={'enriched_pathways': {'cancer_pathways': {'p53_pathway': 0, 'pi3k_pathway': 0, 'rb_pathway': 0}, 'metabolic_pathways': {'glycolysis': 0, 'oxidative_phosphorylation': 0}, 'immune_pathways': {'interferon_response': 0, 'nf_kb_pathway': 0}}, 'total_genes_analyzed': 0, 'pathway_coverage': 0.0}, validation_metrics={'cross_validation_score': 0.0, 'bootstrap_stability': 0.0, 'literature_support': 0.0}, algorithm_stats={'total_genes_analyzed': 0, 'causal_genes_identified': 0, 'causal_gene_ratio': 0.0, 'mean_causal_score': 0.0, 'evidence_type_coverage': {}, 'confidence_distribution': {'High': 0, 'Medium': 0, 'Low': 0}}, success=True, errors=[]).success</failure></testcase><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_confidence_calculation" time="0.001" /><testcase classname="tests.test_closedloop_analyzer.TestClosedLoopAnalyzer" name="test_evidence_similarity" time="0.001" /></testsuite></testsuites>